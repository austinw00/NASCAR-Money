@page "/driverstats"
@inject NASCAR_Money.Services.IDriverService DriverResultService
@inject NASCAR_Money.Services.ITrackService TrackService
@inject NavigationManager NavigationManager
@using System.Net;


@using NASCAR_Money.Models;
@using NASCAR_Money.DbModels;

@if (tracks == null && raceList == null)
{
    <h1>loading</h1>
}
else
{
    <MudForm @ref="form" OnValidSubmit="GetStats">

        <MudSelect Label="Series" @bind-Value="seriesId">
            <MudSelectItem Value="1">Cup Series</MudSelectItem>
            <MudSelectItem Value="2">Xfinity Series</MudSelectItem>
            <MudSelectItem Value="3">Truck Series</MudSelectItem>
        </MudSelect>


    <MudSelect Label="Race Seasons" MultiSelection="true" @bind-SelectedValues="SelectedRaceSeasons">
        <MudSelectItem Value="2018">2018</MudSelectItem>
        <MudSelectItem Value="2019">2019</MudSelectItem>
        <MudSelectItem Value="2020">2020</MudSelectItem>
        <MudSelectItem Value="2021">2021</MudSelectItem>
        <MudSelectItem Value="2022">2022</MudSelectItem>
        <MudSelectItem Value="2023">2023</MudSelectItem>
    </MudSelect>

    <MudSelect T="string" Label="Track Names" MultiSelection="true" @bind-SelectedValues="SelectedTrackNames">
    @foreach (var trackTypeGroup in trackList.GroupBy(t => t.TrackType))
    {
        <MudSelectGroup Label="@trackTypeGroup.Key">
            @foreach (var track in trackTypeGroup)
            {
                <MudSelectItem Value="@track.TrackName">@track.TrackName</MudSelectItem>
            }
        </MudSelectGroup>
    }
</MudSelect>
        @foreach (var track in SelectedTrackNames)
        {
            <div>
                <label>@($"Weight for {track}")</label>
                <MudSlider @bind-Value="trackWeights[track]" Min="0" Max="2" Step="0.05" Color="Color.Primary">Value: @trackWeights[track].ToString("F2")</MudSlider>
            </div>
        }


    <MudButton OnClick="(() => GetStats())">Get Stats</MudButton>
</MudForm>


<MudForm @ref="form2" OnValidSubmit="GetLoopData">
        <MudSelect T="int" Label="Races" MultiSelection="true" @bind-SelectedValues="SelectedRaceIds">
            @foreach(var race in raceList)
            {
                <MudSelectItem Value="@race.RaceId">@race.RaceName | @race.RaceSeason | @race.TrackName</MudSelectItem>
            }
        </MudSelect>
        <MudButton OnClick="(() => GetLoopData())">Get Loop Data</MudButton>
    </MudForm>
}

    




@code {
    MudForm form;
    MudForm form2;

    string? driverFullName;
    int seriesId;
    List<string> tracks;
    List<Track> trackList;
    List<Race> raceList;
    List<DriverAverageStats>? driverStats;
    IEnumerable<int>? SelectedRaceSeasons = new List<int>();
    IEnumerable<string>? SelectedTrackNames = new List<string>();
    IEnumerable<int>? SelectedRaceIds = new List<int>();
    Dictionary<string, double> trackWeights = new Dictionary<string, double>();

    protected override async Task OnInitializedAsync()
    {
        trackList = await TrackService.GetTracks();
        tracks = trackList.Select(t => t.TrackName).ToList();
        raceList = await TrackService.GetRaces();
        foreach (var track in tracks)
        {
            trackWeights[track] = 1.0; // default weight
        }
    }


    private void GetStats()
    {
        var queryString = new System.UriBuilder
            {
                Query = $"seriesId={seriesId}" +
                        $"&raceSeasons={string.Join(',', SelectedRaceSeasons)}" +
                        $"&trackNames={string.Join(',', SelectedTrackNames)}" +
                        $"&trackWeights={string.Join(',', trackWeights.Select(kvp => $"{kvp.Key}:{kvp.Value}"))}"
            }.Uri.Query;

        NavigationManager.NavigateTo($"/driverstatsresults{queryString}", true);
    }

    private void GetLoopData()
    {
        var queryString = new System.UriBuilder
            {
                Query = $"raceIds={string.Join(',', SelectedRaceIds)}"
            }.Uri.Query;

        NavigationManager.NavigateTo($"/loopdatabyraceids{queryString}", true);
    }

    


}
